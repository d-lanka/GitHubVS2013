//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "ResponsysWSSoapBinding", Namespace = "urn:ws.rsys.com")]
public partial class ResponsysWSService : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback loginOperationCompleted;

    private System.Threading.SendOrPostCallback authenticateServerOperationCompleted;

    private AuthSessionHeader authSessionHeaderValueField;

    private System.Threading.SendOrPostCallback loginWithCertificateOperationCompleted;

    private SessionHeader sessionHeaderValueField;

    private System.Threading.SendOrPostCallback logoutOperationCompleted;

    private System.Threading.SendOrPostCallback createFolderOperationCompleted;

    private System.Threading.SendOrPostCallback deleteFolderOperationCompleted;

    private System.Threading.SendOrPostCallback listFoldersOperationCompleted;

    private System.Threading.SendOrPostCallback triggerCampaignMessageOperationCompleted;

    private System.Threading.SendOrPostCallback HaMergeTriggerEmailOperationCompleted;

    private System.Threading.SendOrPostCallback mergeTriggerEmailOperationCompleted;

    private System.Threading.SendOrPostCallback mergeTriggerSMSOperationCompleted;

    private System.Threading.SendOrPostCallback triggerCustomEventOperationCompleted;

    private System.Threading.SendOrPostCallback launchCampaignOperationCompleted;

    private System.Threading.SendOrPostCallback scheduleCampaignLaunchOperationCompleted;

    private System.Threading.SendOrPostCallback getLaunchStatusOperationCompleted;

    private System.Threading.SendOrPostCallback mergeListMembersOperationCompleted;

    private System.Threading.SendOrPostCallback retrieveListMembersOperationCompleted;

    private System.Threading.SendOrPostCallback deleteListMembersOperationCompleted;

    private System.Threading.SendOrPostCallback deleteProfileExtensionMembersOperationCompleted;

    private System.Threading.SendOrPostCallback createTableOperationCompleted;

    private System.Threading.SendOrPostCallback deleteTableOperationCompleted;

    private System.Threading.SendOrPostCallback mergeTableRecordsOperationCompleted;

    private System.Threading.SendOrPostCallback retrieveTableRecordsOperationCompleted;

    private System.Threading.SendOrPostCallback deleteTableRecordsOperationCompleted;

    private System.Threading.SendOrPostCallback truncateTableOperationCompleted;

    private System.Threading.SendOrPostCallback createDocumentOperationCompleted;

    private System.Threading.SendOrPostCallback deleteDocumentOperationCompleted;

    private System.Threading.SendOrPostCallback setDocumentImagesOperationCompleted;

    private System.Threading.SendOrPostCallback getDocumentImagesOperationCompleted;

    private System.Threading.SendOrPostCallback setDocumentContentOperationCompleted;

    private System.Threading.SendOrPostCallback getDocumentContentOperationCompleted;

    private System.Threading.SendOrPostCallback mergeListMembersRIIDOperationCompleted;

    private System.Threading.SendOrPostCallback mergeIntoProfileExtensionOperationCompleted;

    private System.Threading.SendOrPostCallback createTableWithPKOperationCompleted;

    private System.Threading.SendOrPostCallback mergeTableRecordsWithPKOperationCompleted;

    private System.Threading.SendOrPostCallback retrieveProfileExtensionRecordsOperationCompleted;

    private System.Threading.SendOrPostCallback listContentLibraryFoldersOperationCompleted;

    private System.Threading.SendOrPostCallback doesContentLibraryFolderExistOperationCompleted;

    private System.Threading.SendOrPostCallback deleteContentLibraryFolderOperationCompleted;

    private System.Threading.SendOrPostCallback createContentLibraryFolderOperationCompleted;

    private System.Threading.SendOrPostCallback createContentLibraryItemOperationCompleted;

    private System.Threading.SendOrPostCallback setContentLibraryItemOperationCompleted;

    private System.Threading.SendOrPostCallback deleteContentLibraryItemOperationCompleted;

    private System.Threading.SendOrPostCallback getContentLibraryItemOperationCompleted;

    private System.Threading.SendOrPostCallback HaMergeTriggerSmsOperationCompleted;

    /// <remarks/>
    public ResponsysWSService()
    {
        this.Url = "https://ws5.responsys.net/webservices/services/ResponsysWSService";
    }

    public AuthSessionHeader AuthSessionHeaderValue
    {
        get
        {
            return this.authSessionHeaderValueField;
        }
        set
        {
            this.authSessionHeaderValueField = value;
        }
    }

    public SessionHeader SessionHeaderValue
    {
        get
        {
            return this.sessionHeaderValueField;
        }
        set
        {
            this.sessionHeaderValueField = value;
        }
    }

    /// <remarks/>
    public event loginCompletedEventHandler loginCompleted;

    /// <remarks/>
    public event authenticateServerCompletedEventHandler authenticateServerCompleted;

    /// <remarks/>
    public event loginWithCertificateCompletedEventHandler loginWithCertificateCompleted;

    /// <remarks/>
    public event logoutCompletedEventHandler logoutCompleted;

    /// <remarks/>
    public event createFolderCompletedEventHandler createFolderCompleted;

    /// <remarks/>
    public event deleteFolderCompletedEventHandler deleteFolderCompleted;

    /// <remarks/>
    public event listFoldersCompletedEventHandler listFoldersCompleted;

    /// <remarks/>
    public event triggerCampaignMessageCompletedEventHandler triggerCampaignMessageCompleted;

    /// <remarks/>
    public event HaMergeTriggerEmailCompletedEventHandler HaMergeTriggerEmailCompleted;

    /// <remarks/>
    public event mergeTriggerEmailCompletedEventHandler mergeTriggerEmailCompleted;

    /// <remarks/>
    public event mergeTriggerSMSCompletedEventHandler mergeTriggerSMSCompleted;

    /// <remarks/>
    public event triggerCustomEventCompletedEventHandler triggerCustomEventCompleted;

    /// <remarks/>
    public event launchCampaignCompletedEventHandler launchCampaignCompleted;

    /// <remarks/>
    public event scheduleCampaignLaunchCompletedEventHandler scheduleCampaignLaunchCompleted;

    /// <remarks/>
    public event getLaunchStatusCompletedEventHandler getLaunchStatusCompleted;

    /// <remarks/>
    public event mergeListMembersCompletedEventHandler mergeListMembersCompleted;

    /// <remarks/>
    public event retrieveListMembersCompletedEventHandler retrieveListMembersCompleted;

    /// <remarks/>
    public event deleteListMembersCompletedEventHandler deleteListMembersCompleted;

    /// <remarks/>
    public event deleteProfileExtensionMembersCompletedEventHandler deleteProfileExtensionMembersCompleted;

    /// <remarks/>
    public event createTableCompletedEventHandler createTableCompleted;

    /// <remarks/>
    public event deleteTableCompletedEventHandler deleteTableCompleted;

    /// <remarks/>
    public event mergeTableRecordsCompletedEventHandler mergeTableRecordsCompleted;

    /// <remarks/>
    public event retrieveTableRecordsCompletedEventHandler retrieveTableRecordsCompleted;

    /// <remarks/>
    public event deleteTableRecordsCompletedEventHandler deleteTableRecordsCompleted;

    /// <remarks/>
    public event truncateTableCompletedEventHandler truncateTableCompleted;

    /// <remarks/>
    public event createDocumentCompletedEventHandler createDocumentCompleted;

    /// <remarks/>
    public event deleteDocumentCompletedEventHandler deleteDocumentCompleted;

    /// <remarks/>
    public event setDocumentImagesCompletedEventHandler setDocumentImagesCompleted;

    /// <remarks/>
    public event getDocumentImagesCompletedEventHandler getDocumentImagesCompleted;

    /// <remarks/>
    public event setDocumentContentCompletedEventHandler setDocumentContentCompleted;

    /// <remarks/>
    public event getDocumentContentCompletedEventHandler getDocumentContentCompleted;

    /// <remarks/>
    public event mergeListMembersRIIDCompletedEventHandler mergeListMembersRIIDCompleted;

    /// <remarks/>
    public event mergeIntoProfileExtensionCompletedEventHandler mergeIntoProfileExtensionCompleted;

    /// <remarks/>
    public event createTableWithPKCompletedEventHandler createTableWithPKCompleted;

    /// <remarks/>
    public event mergeTableRecordsWithPKCompletedEventHandler mergeTableRecordsWithPKCompleted;

    /// <remarks/>
    public event retrieveProfileExtensionRecordsCompletedEventHandler retrieveProfileExtensionRecordsCompleted;

    /// <remarks/>
    public event listContentLibraryFoldersCompletedEventHandler listContentLibraryFoldersCompleted;

    /// <remarks/>
    public event doesContentLibraryFolderExistCompletedEventHandler doesContentLibraryFolderExistCompleted;

    /// <remarks/>
    public event deleteContentLibraryFolderCompletedEventHandler deleteContentLibraryFolderCompleted;

    /// <remarks/>
    public event createContentLibraryFolderCompletedEventHandler createContentLibraryFolderCompleted;

    /// <remarks/>
    public event createContentLibraryItemCompletedEventHandler createContentLibraryItemCompleted;

    /// <remarks/>
    public event setContentLibraryItemCompletedEventHandler setContentLibraryItemCompleted;

    /// <remarks/>
    public event deleteContentLibraryItemCompletedEventHandler deleteContentLibraryItemCompleted;

    /// <remarks/>
    public event getContentLibraryItemCompletedEventHandler getContentLibraryItemCompleted;

    /// <remarks/>
    public event HaMergeTriggerSmsCompletedEventHandler HaMergeTriggerSmsCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public LoginResult login([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string password)
    {
        object[] results = this.Invoke("login", new object[] {
                    username,
                    password});
        return ((LoginResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginlogin(string username, string password, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("login", new object[] {
                    username,
                    password}, callback, asyncState);
    }

    /// <remarks/>
    public LoginResult Endlogin(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((LoginResult)(results[0]));
    }

    /// <remarks/>
    public void loginAsync(string username, string password)
    {
        this.loginAsync(username, password, null);
    }

    /// <remarks/>
    public void loginAsync(string username, string password, object userState)
    {
        if ((this.loginOperationCompleted == null))
        {
            this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
        }
        this.InvokeAsync("login", new object[] {
                    username,
                    password}, this.loginOperationCompleted, userState);
    }

    private void OnloginOperationCompleted(object arg)
    {
        if ((this.loginCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public ServerAuthResult authenticateServer([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string username, [System.Xml.Serialization.XmlElementAttribute("clientChallenge", IsNullable = true)] System.Nullable<sbyte>[] clientChallenge)
    {
        object[] results = this.Invoke("authenticateServer", new object[] {
                    username,
                    clientChallenge});
        return ((ServerAuthResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginauthenticateServer(string username, System.Nullable<sbyte>[] clientChallenge, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("authenticateServer", new object[] {
                    username,
                    clientChallenge}, callback, asyncState);
    }

    /// <remarks/>
    public ServerAuthResult EndauthenticateServer(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServerAuthResult)(results[0]));
    }

    /// <remarks/>
    public void authenticateServerAsync(string username, System.Nullable<sbyte>[] clientChallenge)
    {
        this.authenticateServerAsync(username, clientChallenge, null);
    }

    /// <remarks/>
    public void authenticateServerAsync(string username, System.Nullable<sbyte>[] clientChallenge, object userState)
    {
        if ((this.authenticateServerOperationCompleted == null))
        {
            this.authenticateServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateServerOperationCompleted);
        }
        this.InvokeAsync("authenticateServer", new object[] {
                    username,
                    clientChallenge}, this.authenticateServerOperationCompleted, userState);
    }

    private void OnauthenticateServerOperationCompleted(object arg)
    {
        if ((this.authenticateServerCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.authenticateServerCompleted(this, new authenticateServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public LoginResult loginWithCertificate([System.Xml.Serialization.XmlElementAttribute("encryptedServerChallenge", IsNullable = true)] System.Nullable<sbyte>[] encryptedServerChallenge)
    {
        object[] results = this.Invoke("loginWithCertificate", new object[] {
                    encryptedServerChallenge});
        return ((LoginResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginloginWithCertificate(System.Nullable<sbyte>[] encryptedServerChallenge, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("loginWithCertificate", new object[] {
                    encryptedServerChallenge}, callback, asyncState);
    }

    /// <remarks/>
    public LoginResult EndloginWithCertificate(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((LoginResult)(results[0]));
    }

    /// <remarks/>
    public void loginWithCertificateAsync(System.Nullable<sbyte>[] encryptedServerChallenge)
    {
        this.loginWithCertificateAsync(encryptedServerChallenge, null);
    }

    /// <remarks/>
    public void loginWithCertificateAsync(System.Nullable<sbyte>[] encryptedServerChallenge, object userState)
    {
        if ((this.loginWithCertificateOperationCompleted == null))
        {
            this.loginWithCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginWithCertificateOperationCompleted);
        }
        this.InvokeAsync("loginWithCertificate", new object[] {
                    encryptedServerChallenge}, this.loginWithCertificateOperationCompleted, userState);
    }

    private void OnloginWithCertificateOperationCompleted(object arg)
    {
        if ((this.loginWithCertificateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginWithCertificateCompleted(this, new loginWithCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool logout()
    {
        object[] results = this.Invoke("logout", new object[0]);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginlogout(System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("logout", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public bool Endlogout(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void logoutAsync()
    {
        this.logoutAsync(null);
    }

    /// <remarks/>
    public void logoutAsync(object userState)
    {
        if ((this.logoutOperationCompleted == null))
        {
            this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
        }
        this.InvokeAsync("logout", new object[0], this.logoutOperationCompleted, userState);
    }

    private void OnlogoutOperationCompleted(object arg)
    {
        if ((this.logoutCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool createFolder(string folderName)
    {
        object[] results = this.Invoke("createFolder", new object[] {
                    folderName});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateFolder(string folderName, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createFolder", new object[] {
                    folderName}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndcreateFolder(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void createFolderAsync(string folderName)
    {
        this.createFolderAsync(folderName, null);
    }

    /// <remarks/>
    public void createFolderAsync(string folderName, object userState)
    {
        if ((this.createFolderOperationCompleted == null))
        {
            this.createFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFolderOperationCompleted);
        }
        this.InvokeAsync("createFolder", new object[] {
                    folderName}, this.createFolderOperationCompleted, userState);
    }

    private void OncreateFolderOperationCompleted(object arg)
    {
        if ((this.createFolderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createFolderCompleted(this, new createFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool deleteFolder(string folderName)
    {
        object[] results = this.Invoke("deleteFolder", new object[] {
                    folderName});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteFolder(string folderName, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteFolder", new object[] {
                    folderName}, callback, asyncState);
    }

    /// <remarks/>
    public bool EnddeleteFolder(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void deleteFolderAsync(string folderName)
    {
        this.deleteFolderAsync(folderName, null);
    }

    /// <remarks/>
    public void deleteFolderAsync(string folderName, object userState)
    {
        if ((this.deleteFolderOperationCompleted == null))
        {
            this.deleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFolderOperationCompleted);
        }
        this.InvokeAsync("deleteFolder", new object[] {
                    folderName}, this.deleteFolderOperationCompleted, userState);
    }

    private void OndeleteFolderOperationCompleted(object arg)
    {
        if ((this.deleteFolderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteFolderCompleted(this, new deleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public FolderResult[] listFolders()
    {
        object[] results = this.Invoke("listFolders", new object[0]);
        return ((FolderResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginlistFolders(System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("listFolders", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public FolderResult[] EndlistFolders(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((FolderResult[])(results[0]));
    }

    /// <remarks/>
    public void listFoldersAsync()
    {
        this.listFoldersAsync(null);
    }

    /// <remarks/>
    public void listFoldersAsync(object userState)
    {
        if ((this.listFoldersOperationCompleted == null))
        {
            this.listFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistFoldersOperationCompleted);
        }
        this.InvokeAsync("listFolders", new object[0], this.listFoldersOperationCompleted, userState);
    }

    private void OnlistFoldersOperationCompleted(object arg)
    {
        if ((this.listFoldersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listFoldersCompleted(this, new listFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult[] triggerCampaignMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute("recipientData", IsNullable = true)] RecipientData[] recipientData)
    {
        object[] results = this.Invoke("triggerCampaignMessage", new object[] {
                    campaign,
                    recipientData});
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegintriggerCampaignMessage(InteractObject campaign, RecipientData[] recipientData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("triggerCampaignMessage", new object[] {
                    campaign,
                    recipientData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult[] EndtriggerCampaignMessage(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public void triggerCampaignMessageAsync(InteractObject campaign, RecipientData[] recipientData)
    {
        this.triggerCampaignMessageAsync(campaign, recipientData, null);
    }

    /// <remarks/>
    public void triggerCampaignMessageAsync(InteractObject campaign, RecipientData[] recipientData, object userState)
    {
        if ((this.triggerCampaignMessageOperationCompleted == null))
        {
            this.triggerCampaignMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OntriggerCampaignMessageOperationCompleted);
        }
        this.InvokeAsync("triggerCampaignMessage", new object[] {
                    campaign,
                    recipientData}, this.triggerCampaignMessageOperationCompleted, userState);
    }

    private void OntriggerCampaignMessageOperationCompleted(object arg)
    {
        if ((this.triggerCampaignMessageCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.triggerCampaignMessageCompleted(this, new triggerCampaignMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult[] HaMergeTriggerEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute("triggerData", IsNullable = true)] TriggerData[] triggerData)
    {
        object[] results = this.Invoke("HaMergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData});
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginHaMergeTriggerEmail(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("HaMergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult[] EndHaMergeTriggerEmail(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public void HaMergeTriggerEmailAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData)
    {
        this.HaMergeTriggerEmailAsync(recordData, mergeRule, campaign, triggerData, null);
    }

    /// <remarks/>
    public void HaMergeTriggerEmailAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, object userState)
    {
        if ((this.HaMergeTriggerEmailOperationCompleted == null))
        {
            this.HaMergeTriggerEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaMergeTriggerEmailOperationCompleted);
        }
        this.InvokeAsync("HaMergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, this.HaMergeTriggerEmailOperationCompleted, userState);
    }

    private void OnHaMergeTriggerEmailOperationCompleted(object arg)
    {
        if ((this.HaMergeTriggerEmailCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HaMergeTriggerEmailCompleted(this, new HaMergeTriggerEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult[] mergeTriggerEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute("triggerData", IsNullable = true)] TriggerData[] triggerData)
    {
        object[] results = this.Invoke("mergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData});
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeTriggerEmail(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult[] EndmergeTriggerEmail(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public void mergeTriggerEmailAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData)
    {
        this.mergeTriggerEmailAsync(recordData, mergeRule, campaign, triggerData, null);
    }

    /// <remarks/>
    public void mergeTriggerEmailAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, object userState)
    {
        if ((this.mergeTriggerEmailOperationCompleted == null))
        {
            this.mergeTriggerEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeTriggerEmailOperationCompleted);
        }
        this.InvokeAsync("mergeTriggerEmail", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, this.mergeTriggerEmailOperationCompleted, userState);
    }

    private void OnmergeTriggerEmailOperationCompleted(object arg)
    {
        if ((this.mergeTriggerEmailCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeTriggerEmailCompleted(this, new mergeTriggerEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult[] mergeTriggerSMS([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute("triggerData", IsNullable = true)] TriggerData[] triggerData)
    {
        object[] results = this.Invoke("mergeTriggerSMS", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData});
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeTriggerSMS(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeTriggerSMS", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult[] EndmergeTriggerSMS(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public void mergeTriggerSMSAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData)
    {
        this.mergeTriggerSMSAsync(recordData, mergeRule, campaign, triggerData, null);
    }

    /// <remarks/>
    public void mergeTriggerSMSAsync(RecordData recordData, ListMergeRule mergeRule, InteractObject campaign, TriggerData[] triggerData, object userState)
    {
        if ((this.mergeTriggerSMSOperationCompleted == null))
        {
            this.mergeTriggerSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeTriggerSMSOperationCompleted);
        }
        this.InvokeAsync("mergeTriggerSMS", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, this.mergeTriggerSMSOperationCompleted, userState);
    }

    private void OnmergeTriggerSMSOperationCompleted(object arg)
    {
        if ((this.mergeTriggerSMSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeTriggerSMSCompleted(this, new mergeTriggerSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult[] triggerCustomEvent(CustomEvent customEvent, [System.Xml.Serialization.XmlElementAttribute("recipientData", IsNullable = true)] RecipientData[] recipientData)
    {
        object[] results = this.Invoke("triggerCustomEvent", new object[] {
                    customEvent,
                    recipientData});
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegintriggerCustomEvent(CustomEvent customEvent, RecipientData[] recipientData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("triggerCustomEvent", new object[] {
                    customEvent,
                    recipientData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult[] EndtriggerCustomEvent(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult[])(results[0]));
    }

    /// <remarks/>
    public void triggerCustomEventAsync(CustomEvent customEvent, RecipientData[] recipientData)
    {
        this.triggerCustomEventAsync(customEvent, recipientData, null);
    }

    /// <remarks/>
    public void triggerCustomEventAsync(CustomEvent customEvent, RecipientData[] recipientData, object userState)
    {
        if ((this.triggerCustomEventOperationCompleted == null))
        {
            this.triggerCustomEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OntriggerCustomEventOperationCompleted);
        }
        this.InvokeAsync("triggerCustomEvent", new object[] {
                    customEvent,
                    recipientData}, this.triggerCustomEventOperationCompleted, userState);
    }

    private void OntriggerCustomEventOperationCompleted(object arg)
    {
        if ((this.triggerCustomEventCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.triggerCustomEventCompleted(this, new triggerCustomEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public LaunchResult launchCampaign([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ProofLaunchOptions proofLaunchOptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] LaunchPreferences launchPreferences)
    {
        object[] results = this.Invoke("launchCampaign", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences});
        return ((LaunchResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginlaunchCampaign(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("launchCampaign", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences}, callback, asyncState);
    }

    /// <remarks/>
    public LaunchResult EndlaunchCampaign(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((LaunchResult)(results[0]));
    }

    /// <remarks/>
    public void launchCampaignAsync(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences)
    {
        this.launchCampaignAsync(campaign, proofLaunchOptions, launchPreferences, null);
    }

    /// <remarks/>
    public void launchCampaignAsync(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences, object userState)
    {
        if ((this.launchCampaignOperationCompleted == null))
        {
            this.launchCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlaunchCampaignOperationCompleted);
        }
        this.InvokeAsync("launchCampaign", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences}, this.launchCampaignOperationCompleted, userState);
    }

    private void OnlaunchCampaignOperationCompleted(object arg)
    {
        if ((this.launchCampaignCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.launchCampaignCompleted(this, new launchCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool scheduleCampaignLaunch([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ProofLaunchOptions proofLaunchOptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] LaunchPreferences launchPreferences, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<System.DateTime> scheduleDate)
    {
        object[] results = this.Invoke("scheduleCampaignLaunch", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences,
                    scheduleDate});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginscheduleCampaignLaunch(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences, System.Nullable<System.DateTime> scheduleDate, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("scheduleCampaignLaunch", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences,
                    scheduleDate}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndscheduleCampaignLaunch(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void scheduleCampaignLaunchAsync(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences, System.Nullable<System.DateTime> scheduleDate)
    {
        this.scheduleCampaignLaunchAsync(campaign, proofLaunchOptions, launchPreferences, scheduleDate, null);
    }

    /// <remarks/>
    public void scheduleCampaignLaunchAsync(InteractObject campaign, ProofLaunchOptions proofLaunchOptions, LaunchPreferences launchPreferences, System.Nullable<System.DateTime> scheduleDate, object userState)
    {
        if ((this.scheduleCampaignLaunchOperationCompleted == null))
        {
            this.scheduleCampaignLaunchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscheduleCampaignLaunchOperationCompleted);
        }
        this.InvokeAsync("scheduleCampaignLaunch", new object[] {
                    campaign,
                    proofLaunchOptions,
                    launchPreferences,
                    scheduleDate}, this.scheduleCampaignLaunchOperationCompleted, userState);
    }

    private void OnscheduleCampaignLaunchOperationCompleted(object arg)
    {
        if ((this.scheduleCampaignLaunchCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.scheduleCampaignLaunchCompleted(this, new scheduleCampaignLaunchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public LaunchStatusResult[] getLaunchStatus([System.Xml.Serialization.XmlElementAttribute("launchIds", IsNullable = true)] System.Nullable<long>[] launchIds)
    {
        object[] results = this.Invoke("getLaunchStatus", new object[] {
                    launchIds});
        return ((LaunchStatusResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetLaunchStatus(System.Nullable<long>[] launchIds, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getLaunchStatus", new object[] {
                    launchIds}, callback, asyncState);
    }

    /// <remarks/>
    public LaunchStatusResult[] EndgetLaunchStatus(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((LaunchStatusResult[])(results[0]));
    }

    /// <remarks/>
    public void getLaunchStatusAsync(System.Nullable<long>[] launchIds)
    {
        this.getLaunchStatusAsync(launchIds, null);
    }

    /// <remarks/>
    public void getLaunchStatusAsync(System.Nullable<long>[] launchIds, object userState)
    {
        if ((this.getLaunchStatusOperationCompleted == null))
        {
            this.getLaunchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLaunchStatusOperationCompleted);
        }
        this.InvokeAsync("getLaunchStatus", new object[] {
                    launchIds}, this.getLaunchStatusOperationCompleted, userState);
    }

    private void OngetLaunchStatusOperationCompleted(object arg)
    {
        if ((this.getLaunchStatusCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getLaunchStatusCompleted(this, new getLaunchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public MergeResult mergeListMembers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject list, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule)
    {
        object[] results = this.Invoke("mergeListMembers", new object[] {
                    list,
                    recordData,
                    mergeRule});
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeListMembers(InteractObject list, RecordData recordData, ListMergeRule mergeRule, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeListMembers", new object[] {
                    list,
                    recordData,
                    mergeRule}, callback, asyncState);
    }

    /// <remarks/>
    public MergeResult EndmergeListMembers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public void mergeListMembersAsync(InteractObject list, RecordData recordData, ListMergeRule mergeRule)
    {
        this.mergeListMembersAsync(list, recordData, mergeRule, null);
    }

    /// <remarks/>
    public void mergeListMembersAsync(InteractObject list, RecordData recordData, ListMergeRule mergeRule, object userState)
    {
        if ((this.mergeListMembersOperationCompleted == null))
        {
            this.mergeListMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeListMembersOperationCompleted);
        }
        this.InvokeAsync("mergeListMembers", new object[] {
                    list,
                    recordData,
                    mergeRule}, this.mergeListMembersOperationCompleted, userState);
    }

    private void OnmergeListMembersOperationCompleted(object arg)
    {
        if ((this.mergeListMembersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeListMembersCompleted(this, new mergeListMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public RetrieveResult retrieveListMembers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject list, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<QueryColumn> queryColumn, [System.Xml.Serialization.XmlElementAttribute("fieldList", IsNullable = true)] string[] fieldList, [System.Xml.Serialization.XmlElementAttribute("idsToRetrieve", IsNullable = true)] string[] idsToRetrieve)
    {
        object[] results = this.Invoke("retrieveListMembers", new object[] {
                    list,
                    queryColumn,
                    fieldList,
                    idsToRetrieve});
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginretrieveListMembers(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("retrieveListMembers", new object[] {
                    list,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, callback, asyncState);
    }

    /// <remarks/>
    public RetrieveResult EndretrieveListMembers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public void retrieveListMembersAsync(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve)
    {
        this.retrieveListMembersAsync(list, queryColumn, fieldList, idsToRetrieve, null);
    }

    /// <remarks/>
    public void retrieveListMembersAsync(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve, object userState)
    {
        if ((this.retrieveListMembersOperationCompleted == null))
        {
            this.retrieveListMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveListMembersOperationCompleted);
        }
        this.InvokeAsync("retrieveListMembers", new object[] {
                    list,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, this.retrieveListMembersOperationCompleted, userState);
    }

    private void OnretrieveListMembersOperationCompleted(object arg)
    {
        if ((this.retrieveListMembersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.retrieveListMembersCompleted(this, new retrieveListMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public DeleteResult[] deleteListMembers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject list, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<QueryColumn> queryColumn, [System.Xml.Serialization.XmlElementAttribute("idsToDelete", IsNullable = true)] string[] idsToDelete)
    {
        object[] results = this.Invoke("deleteListMembers", new object[] {
                    list,
                    queryColumn,
                    idsToDelete});
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteListMembers(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteListMembers", new object[] {
                    list,
                    queryColumn,
                    idsToDelete}, callback, asyncState);
    }

    /// <remarks/>
    public DeleteResult[] EnddeleteListMembers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public void deleteListMembersAsync(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete)
    {
        this.deleteListMembersAsync(list, queryColumn, idsToDelete, null);
    }

    /// <remarks/>
    public void deleteListMembersAsync(InteractObject list, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete, object userState)
    {
        if ((this.deleteListMembersOperationCompleted == null))
        {
            this.deleteListMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteListMembersOperationCompleted);
        }
        this.InvokeAsync("deleteListMembers", new object[] {
                    list,
                    queryColumn,
                    idsToDelete}, this.deleteListMembersOperationCompleted, userState);
    }

    private void OndeleteListMembersOperationCompleted(object arg)
    {
        if ((this.deleteListMembersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteListMembersCompleted(this, new deleteListMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public DeleteResult[] deleteProfileExtensionMembers([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject profileExtension, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<QueryColumn> queryColumn, [System.Xml.Serialization.XmlElementAttribute("idsToDelete", IsNullable = true)] string[] idsToDelete)
    {
        object[] results = this.Invoke("deleteProfileExtensionMembers", new object[] {
                    profileExtension,
                    queryColumn,
                    idsToDelete});
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteProfileExtensionMembers(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteProfileExtensionMembers", new object[] {
                    profileExtension,
                    queryColumn,
                    idsToDelete}, callback, asyncState);
    }

    /// <remarks/>
    public DeleteResult[] EnddeleteProfileExtensionMembers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public void deleteProfileExtensionMembersAsync(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete)
    {
        this.deleteProfileExtensionMembersAsync(profileExtension, queryColumn, idsToDelete, null);
    }

    /// <remarks/>
    public void deleteProfileExtensionMembersAsync(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] idsToDelete, object userState)
    {
        if ((this.deleteProfileExtensionMembersOperationCompleted == null))
        {
            this.deleteProfileExtensionMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProfileExtensionMembersOperationCompleted);
        }
        this.InvokeAsync("deleteProfileExtensionMembers", new object[] {
                    profileExtension,
                    queryColumn,
                    idsToDelete}, this.deleteProfileExtensionMembersOperationCompleted, userState);
    }

    private void OndeleteProfileExtensionMembersOperationCompleted(object arg)
    {
        if ((this.deleteProfileExtensionMembersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteProfileExtensionMembersCompleted(this, new deleteProfileExtensionMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool createTable([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute("fields", IsNullable = true)] Field[] fields)
    {
        object[] results = this.Invoke("createTable", new object[] {
                    table,
                    fields});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateTable(InteractObject table, Field[] fields, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createTable", new object[] {
                    table,
                    fields}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndcreateTable(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void createTableAsync(InteractObject table, Field[] fields)
    {
        this.createTableAsync(table, fields, null);
    }

    /// <remarks/>
    public void createTableAsync(InteractObject table, Field[] fields, object userState)
    {
        if ((this.createTableOperationCompleted == null))
        {
            this.createTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTableOperationCompleted);
        }
        this.InvokeAsync("createTable", new object[] {
                    table,
                    fields}, this.createTableOperationCompleted, userState);
    }

    private void OncreateTableOperationCompleted(object arg)
    {
        if ((this.createTableCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createTableCompleted(this, new createTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool deleteTable([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table)
    {
        object[] results = this.Invoke("deleteTable", new object[] {
                    table});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteTable(InteractObject table, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteTable", new object[] {
                    table}, callback, asyncState);
    }

    /// <remarks/>
    public bool EnddeleteTable(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void deleteTableAsync(InteractObject table)
    {
        this.deleteTableAsync(table, null);
    }

    /// <remarks/>
    public void deleteTableAsync(InteractObject table, object userState)
    {
        if ((this.deleteTableOperationCompleted == null))
        {
            this.deleteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTableOperationCompleted);
        }
        this.InvokeAsync("deleteTable", new object[] {
                    table}, this.deleteTableOperationCompleted, userState);
    }

    private void OndeleteTableOperationCompleted(object arg)
    {
        if ((this.deleteTableCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteTableCompleted(this, new deleteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public MergeResult mergeTableRecords([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute("matchColumnNames", IsNullable = true)] string[] matchColumnNames)
    {
        object[] results = this.Invoke("mergeTableRecords", new object[] {
                    table,
                    recordData,
                    matchColumnNames});
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeTableRecords(InteractObject table, RecordData recordData, string[] matchColumnNames, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeTableRecords", new object[] {
                    table,
                    recordData,
                    matchColumnNames}, callback, asyncState);
    }

    /// <remarks/>
    public MergeResult EndmergeTableRecords(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public void mergeTableRecordsAsync(InteractObject table, RecordData recordData, string[] matchColumnNames)
    {
        this.mergeTableRecordsAsync(table, recordData, matchColumnNames, null);
    }

    /// <remarks/>
    public void mergeTableRecordsAsync(InteractObject table, RecordData recordData, string[] matchColumnNames, object userState)
    {
        if ((this.mergeTableRecordsOperationCompleted == null))
        {
            this.mergeTableRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeTableRecordsOperationCompleted);
        }
        this.InvokeAsync("mergeTableRecords", new object[] {
                    table,
                    recordData,
                    matchColumnNames}, this.mergeTableRecordsOperationCompleted, userState);
    }

    private void OnmergeTableRecordsOperationCompleted(object arg)
    {
        if ((this.mergeTableRecordsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeTableRecordsCompleted(this, new mergeTableRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public RetrieveResult retrieveTableRecords([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string queryColumn, [System.Xml.Serialization.XmlElementAttribute("fieldList", IsNullable = true)] string[] fieldList, [System.Xml.Serialization.XmlElementAttribute("idsToRetrieve", IsNullable = true)] string[] idsToRetrieve)
    {
        object[] results = this.Invoke("retrieveTableRecords", new object[] {
                    table,
                    queryColumn,
                    fieldList,
                    idsToRetrieve});
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginretrieveTableRecords(InteractObject table, string queryColumn, string[] fieldList, string[] idsToRetrieve, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("retrieveTableRecords", new object[] {
                    table,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, callback, asyncState);
    }

    /// <remarks/>
    public RetrieveResult EndretrieveTableRecords(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public void retrieveTableRecordsAsync(InteractObject table, string queryColumn, string[] fieldList, string[] idsToRetrieve)
    {
        this.retrieveTableRecordsAsync(table, queryColumn, fieldList, idsToRetrieve, null);
    }

    /// <remarks/>
    public void retrieveTableRecordsAsync(InteractObject table, string queryColumn, string[] fieldList, string[] idsToRetrieve, object userState)
    {
        if ((this.retrieveTableRecordsOperationCompleted == null))
        {
            this.retrieveTableRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveTableRecordsOperationCompleted);
        }
        this.InvokeAsync("retrieveTableRecords", new object[] {
                    table,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, this.retrieveTableRecordsOperationCompleted, userState);
    }

    private void OnretrieveTableRecordsOperationCompleted(object arg)
    {
        if ((this.retrieveTableRecordsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.retrieveTableRecordsCompleted(this, new retrieveTableRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public DeleteResult[] deleteTableRecords([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string queryColumn, [System.Xml.Serialization.XmlElementAttribute("idsToDelete", IsNullable = true)] string[] idsToDelete)
    {
        object[] results = this.Invoke("deleteTableRecords", new object[] {
                    table,
                    queryColumn,
                    idsToDelete});
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteTableRecords(InteractObject table, string queryColumn, string[] idsToDelete, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteTableRecords", new object[] {
                    table,
                    queryColumn,
                    idsToDelete}, callback, asyncState);
    }

    /// <remarks/>
    public DeleteResult[] EnddeleteTableRecords(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((DeleteResult[])(results[0]));
    }

    /// <remarks/>
    public void deleteTableRecordsAsync(InteractObject table, string queryColumn, string[] idsToDelete)
    {
        this.deleteTableRecordsAsync(table, queryColumn, idsToDelete, null);
    }

    /// <remarks/>
    public void deleteTableRecordsAsync(InteractObject table, string queryColumn, string[] idsToDelete, object userState)
    {
        if ((this.deleteTableRecordsOperationCompleted == null))
        {
            this.deleteTableRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTableRecordsOperationCompleted);
        }
        this.InvokeAsync("deleteTableRecords", new object[] {
                    table,
                    queryColumn,
                    idsToDelete}, this.deleteTableRecordsOperationCompleted, userState);
    }

    private void OndeleteTableRecordsOperationCompleted(object arg)
    {
        if ((this.deleteTableRecordsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteTableRecordsCompleted(this, new deleteTableRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool truncateTable([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table)
    {
        object[] results = this.Invoke("truncateTable", new object[] {
                    table});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegintruncateTable(InteractObject table, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("truncateTable", new object[] {
                    table}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndtruncateTable(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void truncateTableAsync(InteractObject table)
    {
        this.truncateTableAsync(table, null);
    }

    /// <remarks/>
    public void truncateTableAsync(InteractObject table, object userState)
    {
        if ((this.truncateTableOperationCompleted == null))
        {
            this.truncateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OntruncateTableOperationCompleted);
        }
        this.InvokeAsync("truncateTable", new object[] {
                    table}, this.truncateTableOperationCompleted, userState);
    }

    private void OntruncateTableOperationCompleted(object arg)
    {
        if ((this.truncateTableCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.truncateTableCompleted(this, new truncateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool createDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string content, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<CharacterEncoding> characterEncoding)
    {
        object[] results = this.Invoke("createDocument", new object[] {
                    document,
                    content,
                    characterEncoding});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateDocument(InteractObject document, string content, System.Nullable<CharacterEncoding> characterEncoding, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createDocument", new object[] {
                    document,
                    content,
                    characterEncoding}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndcreateDocument(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void createDocumentAsync(InteractObject document, string content, System.Nullable<CharacterEncoding> characterEncoding)
    {
        this.createDocumentAsync(document, content, characterEncoding, null);
    }

    /// <remarks/>
    public void createDocumentAsync(InteractObject document, string content, System.Nullable<CharacterEncoding> characterEncoding, object userState)
    {
        if ((this.createDocumentOperationCompleted == null))
        {
            this.createDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocumentOperationCompleted);
        }
        this.InvokeAsync("createDocument", new object[] {
                    document,
                    content,
                    characterEncoding}, this.createDocumentOperationCompleted, userState);
    }

    private void OncreateDocumentOperationCompleted(object arg)
    {
        if ((this.createDocumentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createDocumentCompleted(this, new createDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool deleteDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document)
    {
        object[] results = this.Invoke("deleteDocument", new object[] {
                    document});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteDocument(InteractObject document, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteDocument", new object[] {
                    document}, callback, asyncState);
    }

    /// <remarks/>
    public bool EnddeleteDocument(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void deleteDocumentAsync(InteractObject document)
    {
        this.deleteDocumentAsync(document, null);
    }

    /// <remarks/>
    public void deleteDocumentAsync(InteractObject document, object userState)
    {
        if ((this.deleteDocumentOperationCompleted == null))
        {
            this.deleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentOperationCompleted);
        }
        this.InvokeAsync("deleteDocument", new object[] {
                    document}, this.deleteDocumentOperationCompleted, userState);
    }

    private void OndeleteDocumentOperationCompleted(object arg)
    {
        if ((this.deleteDocumentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteDocumentCompleted(this, new deleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool setDocumentImages([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document, [System.Xml.Serialization.XmlElementAttribute("imageData", IsNullable = true)] ImageData[] imageData)
    {
        object[] results = this.Invoke("setDocumentImages", new object[] {
                    document,
                    imageData});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetDocumentImages(InteractObject document, ImageData[] imageData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setDocumentImages", new object[] {
                    document,
                    imageData}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndsetDocumentImages(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void setDocumentImagesAsync(InteractObject document, ImageData[] imageData)
    {
        this.setDocumentImagesAsync(document, imageData, null);
    }

    /// <remarks/>
    public void setDocumentImagesAsync(InteractObject document, ImageData[] imageData, object userState)
    {
        if ((this.setDocumentImagesOperationCompleted == null))
        {
            this.setDocumentImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDocumentImagesOperationCompleted);
        }
        this.InvokeAsync("setDocumentImages", new object[] {
                    document,
                    imageData}, this.setDocumentImagesOperationCompleted, userState);
    }

    private void OnsetDocumentImagesOperationCompleted(object arg)
    {
        if ((this.setDocumentImagesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setDocumentImagesCompleted(this, new setDocumentImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public ImageData[] getDocumentImages([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document)
    {
        object[] results = this.Invoke("getDocumentImages", new object[] {
                    document});
        return ((ImageData[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetDocumentImages(InteractObject document, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getDocumentImages", new object[] {
                    document}, callback, asyncState);
    }

    /// <remarks/>
    public ImageData[] EndgetDocumentImages(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((ImageData[])(results[0]));
    }

    /// <remarks/>
    public void getDocumentImagesAsync(InteractObject document)
    {
        this.getDocumentImagesAsync(document, null);
    }

    /// <remarks/>
    public void getDocumentImagesAsync(InteractObject document, object userState)
    {
        if ((this.getDocumentImagesOperationCompleted == null))
        {
            this.getDocumentImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentImagesOperationCompleted);
        }
        this.InvokeAsync("getDocumentImages", new object[] {
                    document}, this.getDocumentImagesOperationCompleted, userState);
    }

    private void OngetDocumentImagesOperationCompleted(object arg)
    {
        if ((this.getDocumentImagesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDocumentImagesCompleted(this, new getDocumentImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool setDocumentContent([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string content)
    {
        object[] results = this.Invoke("setDocumentContent", new object[] {
                    document,
                    content});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetDocumentContent(InteractObject document, string content, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setDocumentContent", new object[] {
                    document,
                    content}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndsetDocumentContent(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void setDocumentContentAsync(InteractObject document, string content)
    {
        this.setDocumentContentAsync(document, content, null);
    }

    /// <remarks/>
    public void setDocumentContentAsync(InteractObject document, string content, object userState)
    {
        if ((this.setDocumentContentOperationCompleted == null))
        {
            this.setDocumentContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDocumentContentOperationCompleted);
        }
        this.InvokeAsync("setDocumentContent", new object[] {
                    document,
                    content}, this.setDocumentContentOperationCompleted, userState);
    }

    private void OnsetDocumentContentOperationCompleted(object arg)
    {
        if ((this.setDocumentContentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setDocumentContentCompleted(this, new setDocumentContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public ContentResult getDocumentContent([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject document)
    {
        object[] results = this.Invoke("getDocumentContent", new object[] {
                    document});
        return ((ContentResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetDocumentContent(InteractObject document, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getDocumentContent", new object[] {
                    document}, callback, asyncState);
    }

    /// <remarks/>
    public ContentResult EndgetDocumentContent(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((ContentResult)(results[0]));
    }

    /// <remarks/>
    public void getDocumentContentAsync(InteractObject document)
    {
        this.getDocumentContentAsync(document, null);
    }

    /// <remarks/>
    public void getDocumentContentAsync(InteractObject document, object userState)
    {
        if ((this.getDocumentContentOperationCompleted == null))
        {
            this.getDocumentContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentContentOperationCompleted);
        }
        this.InvokeAsync("getDocumentContent", new object[] {
                    document}, this.getDocumentContentOperationCompleted, userState);
    }

    private void OngetDocumentContentOperationCompleted(object arg)
    {
        if ((this.getDocumentContentCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDocumentContentCompleted(this, new getDocumentContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("recipientResult", IsNullable = true)]
    public RecipientResult[] mergeListMembersRIID([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject list, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule)
    {
        object[] results = this.Invoke("mergeListMembersRIID", new object[] {
                    list,
                    recordData,
                    mergeRule});
        return ((RecipientResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeListMembersRIID(InteractObject list, RecordData recordData, ListMergeRule mergeRule, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeListMembersRIID", new object[] {
                    list,
                    recordData,
                    mergeRule}, callback, asyncState);
    }

    /// <remarks/>
    public RecipientResult[] EndmergeListMembersRIID(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RecipientResult[])(results[0]));
    }

    /// <remarks/>
    public void mergeListMembersRIIDAsync(InteractObject list, RecordData recordData, ListMergeRule mergeRule)
    {
        this.mergeListMembersRIIDAsync(list, recordData, mergeRule, null);
    }

    /// <remarks/>
    public void mergeListMembersRIIDAsync(InteractObject list, RecordData recordData, ListMergeRule mergeRule, object userState)
    {
        if ((this.mergeListMembersRIIDOperationCompleted == null))
        {
            this.mergeListMembersRIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeListMembersRIIDOperationCompleted);
        }
        this.InvokeAsync("mergeListMembersRIID", new object[] {
                    list,
                    recordData,
                    mergeRule}, this.mergeListMembersRIIDOperationCompleted, userState);
    }

    private void OnmergeListMembersRIIDOperationCompleted(object arg)
    {
        if ((this.mergeListMembersRIIDCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeListMembersRIIDCompleted(this, new mergeListMembersRIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("recipientResult", IsNullable = true)]
    public RecipientResult[] mergeIntoProfileExtension([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject profileExtension, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<QueryColumn> matchColumn, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<bool> insertOnNoMatch, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<UpdateOnMatch> updateOnMatch)
    {
        object[] results = this.Invoke("mergeIntoProfileExtension", new object[] {
                    profileExtension,
                    recordData,
                    matchColumn,
                    insertOnNoMatch,
                    updateOnMatch});
        return ((RecipientResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeIntoProfileExtension(InteractObject profileExtension, RecordData recordData, System.Nullable<QueryColumn> matchColumn, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeIntoProfileExtension", new object[] {
                    profileExtension,
                    recordData,
                    matchColumn,
                    insertOnNoMatch,
                    updateOnMatch}, callback, asyncState);
    }

    /// <remarks/>
    public RecipientResult[] EndmergeIntoProfileExtension(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RecipientResult[])(results[0]));
    }

    /// <remarks/>
    public void mergeIntoProfileExtensionAsync(InteractObject profileExtension, RecordData recordData, System.Nullable<QueryColumn> matchColumn, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch)
    {
        this.mergeIntoProfileExtensionAsync(profileExtension, recordData, matchColumn, insertOnNoMatch, updateOnMatch, null);
    }

    /// <remarks/>
    public void mergeIntoProfileExtensionAsync(InteractObject profileExtension, RecordData recordData, System.Nullable<QueryColumn> matchColumn, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch, object userState)
    {
        if ((this.mergeIntoProfileExtensionOperationCompleted == null))
        {
            this.mergeIntoProfileExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeIntoProfileExtensionOperationCompleted);
        }
        this.InvokeAsync("mergeIntoProfileExtension", new object[] {
                    profileExtension,
                    recordData,
                    matchColumn,
                    insertOnNoMatch,
                    updateOnMatch}, this.mergeIntoProfileExtensionOperationCompleted, userState);
    }

    private void OnmergeIntoProfileExtensionOperationCompleted(object arg)
    {
        if ((this.mergeIntoProfileExtensionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeIntoProfileExtensionCompleted(this, new mergeIntoProfileExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result")]
    public bool createTableWithPK([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute("fields", IsNullable = true)] Field[] fields, [System.Xml.Serialization.XmlElementAttribute("primaryKeys", IsNullable = true)] string[] primaryKeys)
    {
        object[] results = this.Invoke("createTableWithPK", new object[] {
                    table,
                    fields,
                    primaryKeys});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateTableWithPK(InteractObject table, Field[] fields, string[] primaryKeys, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createTableWithPK", new object[] {
                    table,
                    fields,
                    primaryKeys}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndcreateTableWithPK(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void createTableWithPKAsync(InteractObject table, Field[] fields, string[] primaryKeys)
    {
        this.createTableWithPKAsync(table, fields, primaryKeys, null);
    }

    /// <remarks/>
    public void createTableWithPKAsync(InteractObject table, Field[] fields, string[] primaryKeys, object userState)
    {
        if ((this.createTableWithPKOperationCompleted == null))
        {
            this.createTableWithPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTableWithPKOperationCompleted);
        }
        this.InvokeAsync("createTableWithPK", new object[] {
                    table,
                    fields,
                    primaryKeys}, this.createTableWithPKOperationCompleted, userState);
    }

    private void OncreateTableWithPKOperationCompleted(object arg)
    {
        if ((this.createTableWithPKCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createTableWithPKCompleted(this, new createTableWithPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public MergeResult mergeTableRecordsWithPK([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject table, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] RecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<bool> insertOnNoMatch, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<UpdateOnMatch> updateOnMatch)
    {
        object[] results = this.Invoke("mergeTableRecordsWithPK", new object[] {
                    table,
                    recordData,
                    insertOnNoMatch,
                    updateOnMatch});
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginmergeTableRecordsWithPK(InteractObject table, RecordData recordData, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("mergeTableRecordsWithPK", new object[] {
                    table,
                    recordData,
                    insertOnNoMatch,
                    updateOnMatch}, callback, asyncState);
    }

    /// <remarks/>
    public MergeResult EndmergeTableRecordsWithPK(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((MergeResult)(results[0]));
    }

    /// <remarks/>
    public void mergeTableRecordsWithPKAsync(InteractObject table, RecordData recordData, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch)
    {
        this.mergeTableRecordsWithPKAsync(table, recordData, insertOnNoMatch, updateOnMatch, null);
    }

    /// <remarks/>
    public void mergeTableRecordsWithPKAsync(InteractObject table, RecordData recordData, System.Nullable<bool> insertOnNoMatch, System.Nullable<UpdateOnMatch> updateOnMatch, object userState)
    {
        if ((this.mergeTableRecordsWithPKOperationCompleted == null))
        {
            this.mergeTableRecordsWithPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeTableRecordsWithPKOperationCompleted);
        }
        this.InvokeAsync("mergeTableRecordsWithPK", new object[] {
                    table,
                    recordData,
                    insertOnNoMatch,
                    updateOnMatch}, this.mergeTableRecordsWithPKOperationCompleted, userState);
    }

    private void OnmergeTableRecordsWithPKOperationCompleted(object arg)
    {
        if ((this.mergeTableRecordsWithPKCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.mergeTableRecordsWithPKCompleted(this, new mergeTableRecordsWithPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public RetrieveResult retrieveProfileExtensionRecords([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject profileExtension, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<QueryColumn> queryColumn, [System.Xml.Serialization.XmlElementAttribute("fieldList", IsNullable = true)] string[] fieldList, [System.Xml.Serialization.XmlElementAttribute("idsToRetrieve", IsNullable = true)] string[] idsToRetrieve)
    {
        object[] results = this.Invoke("retrieveProfileExtensionRecords", new object[] {
                    profileExtension,
                    queryColumn,
                    fieldList,
                    idsToRetrieve});
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginretrieveProfileExtensionRecords(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("retrieveProfileExtensionRecords", new object[] {
                    profileExtension,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, callback, asyncState);
    }

    /// <remarks/>
    public RetrieveResult EndretrieveProfileExtensionRecords(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((RetrieveResult)(results[0]));
    }

    /// <remarks/>
    public void retrieveProfileExtensionRecordsAsync(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve)
    {
        this.retrieveProfileExtensionRecordsAsync(profileExtension, queryColumn, fieldList, idsToRetrieve, null);
    }

    /// <remarks/>
    public void retrieveProfileExtensionRecordsAsync(InteractObject profileExtension, System.Nullable<QueryColumn> queryColumn, string[] fieldList, string[] idsToRetrieve, object userState)
    {
        if ((this.retrieveProfileExtensionRecordsOperationCompleted == null))
        {
            this.retrieveProfileExtensionRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveProfileExtensionRecordsOperationCompleted);
        }
        this.InvokeAsync("retrieveProfileExtensionRecords", new object[] {
                    profileExtension,
                    queryColumn,
                    fieldList,
                    idsToRetrieve}, this.retrieveProfileExtensionRecordsOperationCompleted, userState);
    }

    private void OnretrieveProfileExtensionRecordsOperationCompleted(object arg)
    {
        if ((this.retrieveProfileExtensionRecordsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.retrieveProfileExtensionRecordsCompleted(this, new retrieveProfileExtensionRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public ContentLibraryFolderResult[] listContentLibraryFolders([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string startingPath, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] System.Nullable<bool> showTree)
    {
        object[] results = this.Invoke("listContentLibraryFolders", new object[] {
                    startingPath,
                    showTree});
        return ((ContentLibraryFolderResult[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginlistContentLibraryFolders(string startingPath, System.Nullable<bool> showTree, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("listContentLibraryFolders", new object[] {
                    startingPath,
                    showTree}, callback, asyncState);
    }

    /// <remarks/>
    public ContentLibraryFolderResult[] EndlistContentLibraryFolders(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((ContentLibraryFolderResult[])(results[0]));
    }

    /// <remarks/>
    public void listContentLibraryFoldersAsync(string startingPath, System.Nullable<bool> showTree)
    {
        this.listContentLibraryFoldersAsync(startingPath, showTree, null);
    }

    /// <remarks/>
    public void listContentLibraryFoldersAsync(string startingPath, System.Nullable<bool> showTree, object userState)
    {
        if ((this.listContentLibraryFoldersOperationCompleted == null))
        {
            this.listContentLibraryFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistContentLibraryFoldersOperationCompleted);
        }
        this.InvokeAsync("listContentLibraryFolders", new object[] {
                    startingPath,
                    showTree}, this.listContentLibraryFoldersOperationCompleted, userState);
    }

    private void OnlistContentLibraryFoldersOperationCompleted(object arg)
    {
        if ((this.listContentLibraryFoldersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listContentLibraryFoldersCompleted(this, new listContentLibraryFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> doesContentLibraryFolderExist(string path)
    {
        object[] results = this.Invoke("doesContentLibraryFolderExist", new object[] {
                    path});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindoesContentLibraryFolderExist(string path, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("doesContentLibraryFolderExist", new object[] {
                    path}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EnddoesContentLibraryFolderExist(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void doesContentLibraryFolderExistAsync(string path)
    {
        this.doesContentLibraryFolderExistAsync(path, null);
    }

    /// <remarks/>
    public void doesContentLibraryFolderExistAsync(string path, object userState)
    {
        if ((this.doesContentLibraryFolderExistOperationCompleted == null))
        {
            this.doesContentLibraryFolderExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesContentLibraryFolderExistOperationCompleted);
        }
        this.InvokeAsync("doesContentLibraryFolderExist", new object[] {
                    path}, this.doesContentLibraryFolderExistOperationCompleted, userState);
    }

    private void OndoesContentLibraryFolderExistOperationCompleted(object arg)
    {
        if ((this.doesContentLibraryFolderExistCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doesContentLibraryFolderExistCompleted(this, new doesContentLibraryFolderExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> deleteContentLibraryFolder([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string folderName)
    {
        object[] results = this.Invoke("deleteContentLibraryFolder", new object[] {
                    folderName});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteContentLibraryFolder(string folderName, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteContentLibraryFolder", new object[] {
                    folderName}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EnddeleteContentLibraryFolder(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void deleteContentLibraryFolderAsync(string folderName)
    {
        this.deleteContentLibraryFolderAsync(folderName, null);
    }

    /// <remarks/>
    public void deleteContentLibraryFolderAsync(string folderName, object userState)
    {
        if ((this.deleteContentLibraryFolderOperationCompleted == null))
        {
            this.deleteContentLibraryFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteContentLibraryFolderOperationCompleted);
        }
        this.InvokeAsync("deleteContentLibraryFolder", new object[] {
                    folderName}, this.deleteContentLibraryFolderOperationCompleted, userState);
    }

    private void OndeleteContentLibraryFolderOperationCompleted(object arg)
    {
        if ((this.deleteContentLibraryFolderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteContentLibraryFolderCompleted(this, new deleteContentLibraryFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> createContentLibraryFolder([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string path)
    {
        object[] results = this.Invoke("createContentLibraryFolder", new object[] {
                    path});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateContentLibraryFolder(string path, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createContentLibraryFolder", new object[] {
                    path}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EndcreateContentLibraryFolder(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void createContentLibraryFolderAsync(string path)
    {
        this.createContentLibraryFolderAsync(path, null);
    }

    /// <remarks/>
    public void createContentLibraryFolderAsync(string path, object userState)
    {
        if ((this.createContentLibraryFolderOperationCompleted == null))
        {
            this.createContentLibraryFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContentLibraryFolderOperationCompleted);
        }
        this.InvokeAsync("createContentLibraryFolder", new object[] {
                    path}, this.createContentLibraryFolderOperationCompleted, userState);
    }

    private void OncreateContentLibraryFolderOperationCompleted(object arg)
    {
        if ((this.createContentLibraryFolderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createContentLibraryFolderCompleted(this, new createContentLibraryFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> createContentLibraryItem([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject contentLibraryLocation, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ItemData itemData)
    {
        object[] results = this.Invoke("createContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegincreateContentLibraryItem(InteractObject contentLibraryLocation, string type, ItemData itemData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("createContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EndcreateContentLibraryItem(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void createContentLibraryItemAsync(InteractObject contentLibraryLocation, string type, ItemData itemData)
    {
        this.createContentLibraryItemAsync(contentLibraryLocation, type, itemData, null);
    }

    /// <remarks/>
    public void createContentLibraryItemAsync(InteractObject contentLibraryLocation, string type, ItemData itemData, object userState)
    {
        if ((this.createContentLibraryItemOperationCompleted == null))
        {
            this.createContentLibraryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContentLibraryItemOperationCompleted);
        }
        this.InvokeAsync("createContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData}, this.createContentLibraryItemOperationCompleted, userState);
    }

    private void OncreateContentLibraryItemOperationCompleted(object arg)
    {
        if ((this.createContentLibraryItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createContentLibraryItemCompleted(this, new createContentLibraryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> setContentLibraryItem([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject contentLibraryLocation, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ItemData itemData)
    {
        object[] results = this.Invoke("setContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsetContentLibraryItem(InteractObject contentLibraryLocation, string type, ItemData itemData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("setContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EndsetContentLibraryItem(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void setContentLibraryItemAsync(InteractObject contentLibraryLocation, string type, ItemData itemData)
    {
        this.setContentLibraryItemAsync(contentLibraryLocation, type, itemData, null);
    }

    /// <remarks/>
    public void setContentLibraryItemAsync(InteractObject contentLibraryLocation, string type, ItemData itemData, object userState)
    {
        if ((this.setContentLibraryItemOperationCompleted == null))
        {
            this.setContentLibraryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetContentLibraryItemOperationCompleted);
        }
        this.InvokeAsync("setContentLibraryItem", new object[] {
                    contentLibraryLocation,
                    type,
                    itemData}, this.setContentLibraryItemOperationCompleted, userState);
    }

    private void OnsetContentLibraryItemOperationCompleted(object arg)
    {
        if ((this.setContentLibraryItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setContentLibraryItemCompleted(this, new setContentLibraryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public System.Nullable<bool> deleteContentLibraryItem([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject contentLibraryLocation)
    {
        object[] results = this.Invoke("deleteContentLibraryItem", new object[] {
                    contentLibraryLocation});
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegindeleteContentLibraryItem(InteractObject contentLibraryLocation, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("deleteContentLibraryItem", new object[] {
                    contentLibraryLocation}, callback, asyncState);
    }

    /// <remarks/>
    public System.Nullable<bool> EnddeleteContentLibraryItem(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<bool>)(results[0]));
    }

    /// <remarks/>
    public void deleteContentLibraryItemAsync(InteractObject contentLibraryLocation)
    {
        this.deleteContentLibraryItemAsync(contentLibraryLocation, null);
    }

    /// <remarks/>
    public void deleteContentLibraryItemAsync(InteractObject contentLibraryLocation, object userState)
    {
        if ((this.deleteContentLibraryItemOperationCompleted == null))
        {
            this.deleteContentLibraryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteContentLibraryItemOperationCompleted);
        }
        this.InvokeAsync("deleteContentLibraryItem", new object[] {
                    contentLibraryLocation}, this.deleteContentLibraryItemOperationCompleted, userState);
    }

    private void OndeleteContentLibraryItemOperationCompleted(object arg)
    {
        if ((this.deleteContentLibraryItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteContentLibraryItemCompleted(this, new deleteContentLibraryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("name", IsNullable = true)]
    public string getContentLibraryItem([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject sourceObject, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] out string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] out ItemData itemData)
    {
        object[] results = this.Invoke("getContentLibraryItem", new object[] {
                    sourceObject});
        type = ((string)(results[1]));
        itemData = ((ItemData)(results[2]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetContentLibraryItem(InteractObject sourceObject, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getContentLibraryItem", new object[] {
                    sourceObject}, callback, asyncState);
    }

    /// <remarks/>
    public string EndgetContentLibraryItem(System.IAsyncResult asyncResult, out string type, out ItemData itemData)
    {
        object[] results = this.EndInvoke(asyncResult);
        type = ((string)(results[1]));
        itemData = ((ItemData)(results[2]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void getContentLibraryItemAsync(InteractObject sourceObject)
    {
        this.getContentLibraryItemAsync(sourceObject, null);
    }

    /// <remarks/>
    public void getContentLibraryItemAsync(InteractObject sourceObject, object userState)
    {
        if ((this.getContentLibraryItemOperationCompleted == null))
        {
            this.getContentLibraryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContentLibraryItemOperationCompleted);
        }
        this.InvokeAsync("getContentLibraryItem", new object[] {
                    sourceObject}, this.getContentLibraryItemOperationCompleted, userState);
    }

    private void OngetContentLibraryItemOperationCompleted(object arg)
    {
        if ((this.getContentLibraryItemCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getContentLibraryItemCompleted(this, new getContentLibraryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:ws.rsys.com", ResponseNamespace = "urn:ws.rsys.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("result", IsNullable = true)]
    public TriggerResult HaMergeTriggerSms([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] SmsRecordData recordData, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] ListMergeRule mergeRule, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] InteractObject campaign, [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)] [System.Xml.Serialization.XmlArrayItemAttribute("optionalData")] OptionalData[] triggerData)
    {
        object[] results = this.Invoke("HaMergeTriggerSms", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData});
        return ((TriggerResult)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginHaMergeTriggerSms(SmsRecordData recordData, ListMergeRule mergeRule, InteractObject campaign, OptionalData[] triggerData, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("HaMergeTriggerSms", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, callback, asyncState);
    }

    /// <remarks/>
    public TriggerResult EndHaMergeTriggerSms(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((TriggerResult)(results[0]));
    }

    /// <remarks/>
    public void HaMergeTriggerSmsAsync(SmsRecordData recordData, ListMergeRule mergeRule, InteractObject campaign, OptionalData[] triggerData)
    {
        this.HaMergeTriggerSmsAsync(recordData, mergeRule, campaign, triggerData, null);
    }

    /// <remarks/>
    public void HaMergeTriggerSmsAsync(SmsRecordData recordData, ListMergeRule mergeRule, InteractObject campaign, OptionalData[] triggerData, object userState)
    {
        if ((this.HaMergeTriggerSmsOperationCompleted == null))
        {
            this.HaMergeTriggerSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHaMergeTriggerSmsOperationCompleted);
        }
        this.InvokeAsync("HaMergeTriggerSms", new object[] {
                    recordData,
                    mergeRule,
                    campaign,
                    triggerData}, this.HaMergeTriggerSmsOperationCompleted, userState);
    }

    private void OnHaMergeTriggerSmsOperationCompleted(object arg)
    {
        if ((this.HaMergeTriggerSmsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HaMergeTriggerSmsCompleted(this, new HaMergeTriggerSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:ws.rsys.com")]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:ws.rsys.com", IsNullable = false)]
public partial class AuthSessionHeader : System.Web.Services.Protocols.SoapHeader
{

    private string authSessionIdField;

    /// <remarks/>
    public string authSessionId
    {
        get
        {
            return this.authSessionIdField;
        }
        set
        {
            this.authSessionIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class SmsRecordData
{

    private string[] fieldNamesField;

    private string[] recordField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("fieldNames", IsNullable = true)]
    public string[] fieldNames
    {
        get
        {
            return this.fieldNamesField;
        }
        set
        {
            this.fieldNamesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
    [System.Xml.Serialization.XmlArrayItemAttribute("fieldValues")]
    public string[] record
    {
        get
        {
            return this.recordField;
        }
        set
        {
            this.recordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ItemData
{

    private byte[] itemField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", IsNullable = true)]
    public byte[] item
    {
        get
        {
            return this.itemField;
        }
        set
        {
            this.itemField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ContentLibraryFolderResult
{

    private string pathField;

    /// <remarks/>
    public string path
    {
        get
        {
            return this.pathField;
        }
        set
        {
            this.pathField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class RecipientResult
{

    private System.Nullable<long> recipientIdField;

    private string errorMessageField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> recipientId
    {
        get
        {
            return this.recipientIdField;
        }
        set
        {
            this.recipientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string errorMessage
    {
        get
        {
            return this.errorMessageField;
        }
        set
        {
            this.errorMessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ContentResult
{

    private string contentField;

    private System.Nullable<ContentFormat> formatField;

    private System.Nullable<CharacterEncoding> characterEncodingField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string content
    {
        get
        {
            return this.contentField;
        }
        set
        {
            this.contentField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<ContentFormat> format
    {
        get
        {
            return this.formatField;
        }
        set
        {
            this.formatField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<CharacterEncoding> characterEncoding
    {
        get
        {
            return this.characterEncodingField;
        }
        set
        {
            this.characterEncodingField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum ContentFormat
{

    /// <remarks/>
    HTML,

    /// <remarks/>
    TEXT,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum CharacterEncoding
{

    /// <remarks/>
    ISO_8859_1,

    /// <remarks/>
    windows_1257,

    /// <remarks/>
    ISO_8859_2,

    /// <remarks/>
    gb2312,

    /// <remarks/>
    big5,

    /// <remarks/>
    ISO_8859_7,

    /// <remarks/>
    SJIS,

    /// <remarks/>
    euc_kr,

    /// <remarks/>
    koi8_r,

    /// <remarks/>
    ISO_8859_9,

    /// <remarks/>
    UTF_8,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ImageData
{

    private byte[] imageField;

    private string imageNameField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", IsNullable = true)]
    public byte[] image
    {
        get
        {
            return this.imageField;
        }
        set
        {
            this.imageField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string imageName
    {
        get
        {
            return this.imageNameField;
        }
        set
        {
            this.imageNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class Field
{

    private string fieldNameField;

    private System.Nullable<FieldType> fieldTypeField;

    private System.Nullable<bool> customField;

    private System.Nullable<bool> dataExtractionKeyField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string fieldName
    {
        get
        {
            return this.fieldNameField;
        }
        set
        {
            this.fieldNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<FieldType> fieldType
    {
        get
        {
            return this.fieldTypeField;
        }
        set
        {
            this.fieldTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> custom
    {
        get
        {
            return this.customField;
        }
        set
        {
            this.customField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> dataExtractionKey
    {
        get
        {
            return this.dataExtractionKeyField;
        }
        set
        {
            this.dataExtractionKeyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum FieldType
{

    /// <remarks/>
    STR500,

    /// <remarks/>
    STR4000,

    /// <remarks/>
    NUMBER,

    /// <remarks/>
    INTEGER,

    /// <remarks/>
    TIMESTAMP,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class DeleteResult
{

    private string idField;

    private System.Nullable<bool> successField;

    private System.Nullable<ExceptionCode> exceptionCodeField;

    private string errorMessageField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string id
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> success
    {
        get
        {
            return this.successField;
        }
        set
        {
            this.successField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<ExceptionCode> exceptionCode
    {
        get
        {
            return this.exceptionCodeField;
        }
        set
        {
            this.exceptionCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string errorMessage
    {
        get
        {
            return this.errorMessageField;
        }
        set
        {
            this.errorMessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:fault.ws.rsys.com")]
public enum ExceptionCode
{

    /// <remarks/>
    API_DISABLED_FOR_USER,

    /// <remarks/>
    INSUFFICIENT_ACCESS,

    /// <remarks/>
    INVALID_USER_NAME,

    /// <remarks/>
    INVALID_PASSWORD,

    /// <remarks/>
    INVALID_SESSION_ID,

    /// <remarks/>
    INVALID_SOAP_HEADER,

    /// <remarks/>
    INVALID_NUMBER,

    /// <remarks/>
    INVALID_DATE,

    /// <remarks/>
    INVALID_PARAMETER,

    /// <remarks/>
    INVALID_FIELD_NAME,

    /// <remarks/>
    INVALID_OBJECT,

    /// <remarks/>
    PASSWORD_LOCKOUT,

    /// <remarks/>
    PASSWORD_EXPIRED,

    /// <remarks/>
    REQUEST_LIMIT_EXCEEDED,

    /// <remarks/>
    CAMPAIGN_NOT_FOUND,

    /// <remarks/>
    CAMPAIGN_ALREADY_EXISTS,

    /// <remarks/>
    RECIPIENT_LIMIT_EXCEEDED,

    /// <remarks/>
    MAX_ATTACHMENT_SIZE_EXCEEDED,

    /// <remarks/>
    PROOF_LIST_NOT_FOUND,

    /// <remarks/>
    CAMPAIGN_LAUNCH_IN_PROGRESS,

    /// <remarks/>
    CAMPAIGN_NOT_LISTENING,

    /// <remarks/>
    CAMPAIGN_LAUNCH_NOT_SCHEDULED,

    /// <remarks/>
    CAMPAIGN_LAUNCH_NOT_UNSCHEDULED,

    /// <remarks/>
    CAMPAIGN_NOT_APPROVED_FOR_LAUNCH,

    /// <remarks/>
    SCHEDULED_LAUNCH_NOT_FOUND,

    /// <remarks/>
    CAMPAIGN_IS_INVALID,

    /// <remarks/>
    MOBILE_CAMPAIGN_DISABLED_FOR_USER,

    /// <remarks/>
    FOLDER_NOT_FOUND,

    /// <remarks/>
    FOLDER_ALREADY_EXISTS,

    /// <remarks/>
    NO_OPEN_LAUNCHES_FOR_THIS_ACCOUNT,

    /// <remarks/>
    NO_LAUNCHES_FOR_THIS_CAMPAIGN,

    /// <remarks/>
    NO_CAMPAIGNS_IN_THIS_FOLDER,

    /// <remarks/>
    NO_OBJECTS_IN_THIS_FOLDER,

    /// <remarks/>
    LIST_NOT_FOUND,

    /// <remarks/>
    LIST_ALREADY_EXISTS,

    /// <remarks/>
    LINK_TABLE_NOT_FOUND,

    /// <remarks/>
    LINK_TABLE_ALREADY_EXISTS,

    /// <remarks/>
    TABLE_ALREADY_EXISTS,

    /// <remarks/>
    TABLE_NOT_FOUND,

    /// <remarks/>
    CUSTOM_EVENT_NOT_FOUND,

    /// <remarks/>
    RECORD_LIMIT_EXCEEDED,

    /// <remarks/>
    RECORD_NOT_FOUND,

    /// <remarks/>
    OBJECT_NOT_FOUND,

    /// <remarks/>
    OBJECT_ALREADY_EXISTS,

    /// <remarks/>
    OPERATION_NOT_SUPPORTED,

    /// <remarks/>
    MULTIPLE_OBJECTS_FOUND,

    /// <remarks/>
    DOCUMENT_NOT_FOUND,

    /// <remarks/>
    DOCUMENT_ALREADY_EXISTS,

    /// <remarks/>
    IMAGES_NOT_FOUND,

    /// <remarks/>
    UNEXPECTED_EXCEPTION,

    /// <remarks/>
    UNRECOVERABLE_EXCEPTION,

    /// <remarks/>
    INVALID_AUTHENTICATION_OPTION,

    /// <remarks/>
    AUTHENTICATION_FAILED,

    /// <remarks/>
    CLIENT_CERTIFICATE_EXPIRED,

    /// <remarks/>
    CLIENT_CERTIFICATE_NOT_YET_VALID,

    /// <remarks/>
    CLIENT_CERTIFICATE_NOT_FOUND,

    /// <remarks/>
    SERVER_CERTIFICATE_EXPIRED,

    /// <remarks/>
    SERVER_CERTIFICATE_NOT_YET_VALID,

    /// <remarks/>
    SERVER_CERTIFICATE_NOT_FOUND,

    /// <remarks/>
    CONNECT_JOB_NOT_FOUND,

    /// <remarks/>
    CONNECT_JOB_ALREADY_RUNNING,

    /// <remarks/>
    CONNECT_JOB_INACTIVE,

    /// <remarks/>
    CONNECT_JOB_RUN_NOT_FOUND,

    /// <remarks/>
    NO_CONNECT_JOBS_FOUND,

    /// <remarks/>
    CONNECT_JOB_RUN_LOG_NOT_FOUND,

    /// <remarks/>
    CONNECT_DISABLED_FOR_USER,

    /// <remarks/>
    CANNOT_RUN_CONNECT_JOB,

    /// <remarks/>
    PROFILE_EXTENSION_NOT_FOUND,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class RetrieveResult
{

    private RecordData recordDataField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public RecordData recordData
    {
        get
        {
            return this.recordDataField;
        }
        set
        {
            this.recordDataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class RecordData
{

    private string[] fieldNamesField;

    private Record[] recordsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("fieldNames", IsNullable = true)]
    public string[] fieldNames
    {
        get
        {
            return this.fieldNamesField;
        }
        set
        {
            this.fieldNamesField = value;
        }
    }

    /// <remarks/>
    // [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    //[System.Xml.Serialization.XmlArrayItemAttribute("fieldValues", typeof(string))]

    [System.Xml.Serialization.XmlElementAttribute("records", IsNullable = true)] // added by Dilanka in order to see if the casting works
    public Record[] records
    {
        get
        {
            return this.recordsField;
        }
        set
        {
            this.recordsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class MergeResult
{

    private System.Nullable<long> insertCountField;

    private System.Nullable<long> updateCountField;

    private System.Nullable<long> rejectedCountField;

    private System.Nullable<long> totalCountField;

    private string errorMessageField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> insertCount
    {
        get
        {
            return this.insertCountField;
        }
        set
        {
            this.insertCountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> updateCount
    {
        get
        {
            return this.updateCountField;
        }
        set
        {
            this.updateCountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> rejectedCount
    {
        get
        {
            return this.rejectedCountField;
        }
        set
        {
            this.rejectedCountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> totalCount
    {
        get
        {
            return this.totalCountField;
        }
        set
        {
            this.totalCountField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string errorMessage
    {
        get
        {
            return this.errorMessageField;
        }
        set
        {
            this.errorMessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class LaunchStatusResult
{

    private System.Nullable<long> launchIdField;

    private string launchStateField;

    private string launchTypeField;

    private System.Nullable<System.DateTime> launchDateField;

    private string campaignField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> launchId
    {
        get
        {
            return this.launchIdField;
        }
        set
        {
            this.launchIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string launchState
    {
        get
        {
            return this.launchStateField;
        }
        set
        {
            this.launchStateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string launchType
    {
        get
        {
            return this.launchTypeField;
        }
        set
        {
            this.launchTypeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<System.DateTime> launchDate
    {
        get
        {
            return this.launchDateField;
        }
        set
        {
            this.launchDateField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string campaign
    {
        get
        {
            return this.campaignField;
        }
        set
        {
            this.campaignField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class LaunchResult
{

    private System.Nullable<long> launchIdField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> launchId
    {
        get
        {
            return this.launchIdField;
        }
        set
        {
            this.launchIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class LaunchPreferences
{

    private System.Nullable<bool> enableLimitField;

    private System.Nullable<long> recipientLimitField;

    private System.Nullable<bool> enableNthSamplingField;

    private System.Nullable<int> samplingNthSelectionField;

    private System.Nullable<int> samplingNthIntervalField;

    private System.Nullable<int> samplingNthOffsetField;

    private System.Nullable<bool> enableProgressAlertsField;

    private string progressEmailAddressesField;

    private System.Nullable<ProgressChunk> progressChunkField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> enableLimit
    {
        get
        {
            return this.enableLimitField;
        }
        set
        {
            this.enableLimitField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> recipientLimit
    {
        get
        {
            return this.recipientLimitField;
        }
        set
        {
            this.recipientLimitField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> enableNthSampling
    {
        get
        {
            return this.enableNthSamplingField;
        }
        set
        {
            this.enableNthSamplingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<int> samplingNthSelection
    {
        get
        {
            return this.samplingNthSelectionField;
        }
        set
        {
            this.samplingNthSelectionField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<int> samplingNthInterval
    {
        get
        {
            return this.samplingNthIntervalField;
        }
        set
        {
            this.samplingNthIntervalField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<int> samplingNthOffset
    {
        get
        {
            return this.samplingNthOffsetField;
        }
        set
        {
            this.samplingNthOffsetField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> enableProgressAlerts
    {
        get
        {
            return this.enableProgressAlertsField;
        }
        set
        {
            this.enableProgressAlertsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string progressEmailAddresses
    {
        get
        {
            return this.progressEmailAddressesField;
        }
        set
        {
            this.progressEmailAddressesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<ProgressChunk> progressChunk
    {
        get
        {
            return this.progressChunkField;
        }
        set
        {
            this.progressChunkField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum ProgressChunk
{

    /// <remarks/>
    CHUNK_10K,

    /// <remarks/>
    CHUNK_50K,

    /// <remarks/>
    CHUNK_100K,

    /// <remarks/>
    CHUNK_500K,

    /// <remarks/>
    CHUNK_1M,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ProofLaunchOptions
{

    private string proofEmailAddressField;

    private System.Nullable<ProofLaunchType> proofLaunchTypeField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string proofEmailAddress
    {
        get
        {
            return this.proofEmailAddressField;
        }
        set
        {
            this.proofEmailAddressField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<ProofLaunchType> proofLaunchType
    {
        get
        {
            return this.proofLaunchTypeField;
        }
        set
        {
            this.proofLaunchTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum ProofLaunchType
{

    /// <remarks/>
    LAUNCH_TO_ADDRESS,

    /// <remarks/>
    LAUNCH_TO_PROOFLIST,

    /// <remarks/>
    LAUNCH_TO_ADDRESS_USING_PROOFLIST,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class CustomEvent
{

    private string eventNameField;

    private System.Nullable<long> eventIdField;

    private string eventStringDataMappingField;

    private string eventDateDataMappingField;

    private string eventNumberDataMappingField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string eventName
    {
        get
        {
            return this.eventNameField;
        }
        set
        {
            this.eventNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> eventId
    {
        get
        {
            return this.eventIdField;
        }
        set
        {
            this.eventIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string eventStringDataMapping
    {
        get
        {
            return this.eventStringDataMappingField;
        }
        set
        {
            this.eventStringDataMappingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string eventDateDataMapping
    {
        get
        {
            return this.eventDateDataMappingField;
        }
        set
        {
            this.eventDateDataMappingField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string eventNumberDataMapping
    {
        get
        {
            return this.eventNumberDataMappingField;
        }
        set
        {
            this.eventNumberDataMappingField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class TriggerData
{

    private OptionalData[] optionalDataField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("optionalData", IsNullable = true)]
    public OptionalData[] optionalData
    {
        get
        {
            return this.optionalDataField;
        }
        set
        {
            this.optionalDataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class OptionalData
{

    private string nameField;

    private string valueField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ListMergeRule
{

    private System.Nullable<bool> insertOnNoMatchField;

    private System.Nullable<UpdateOnMatch> updateOnMatchField;

    private string matchColumnName1Field;

    private string matchColumnName2Field;

    private string matchColumnName3Field;

    private System.Nullable<MatchOperator> matchOperatorField;

    private string optinValueField;

    private string optoutValueField;

    private string htmlValueField;

    private string textValueField;

    private string rejectRecordIfChannelEmptyField;

    private System.Nullable<PermissionStatus> defaultPermissionStatusField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> insertOnNoMatch
    {
        get
        {
            return this.insertOnNoMatchField;
        }
        set
        {
            this.insertOnNoMatchField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<UpdateOnMatch> updateOnMatch
    {
        get
        {
            return this.updateOnMatchField;
        }
        set
        {
            this.updateOnMatchField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string matchColumnName1
    {
        get
        {
            return this.matchColumnName1Field;
        }
        set
        {
            this.matchColumnName1Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string matchColumnName2
    {
        get
        {
            return this.matchColumnName2Field;
        }
        set
        {
            this.matchColumnName2Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string matchColumnName3
    {
        get
        {
            return this.matchColumnName3Field;
        }
        set
        {
            this.matchColumnName3Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<MatchOperator> matchOperator
    {
        get
        {
            return this.matchOperatorField;
        }
        set
        {
            this.matchOperatorField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string optinValue
    {
        get
        {
            return this.optinValueField;
        }
        set
        {
            this.optinValueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string optoutValue
    {
        get
        {
            return this.optoutValueField;
        }
        set
        {
            this.optoutValueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string htmlValue
    {
        get
        {
            return this.htmlValueField;
        }
        set
        {
            this.htmlValueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string textValue
    {
        get
        {
            return this.textValueField;
        }
        set
        {
            this.textValueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string rejectRecordIfChannelEmpty
    {
        get
        {
            return this.rejectRecordIfChannelEmptyField;
        }
        set
        {
            this.rejectRecordIfChannelEmptyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<PermissionStatus> defaultPermissionStatus
    {
        get
        {
            return this.defaultPermissionStatusField;
        }
        set
        {
            this.defaultPermissionStatusField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum UpdateOnMatch
{

    /// <remarks/>
    REPLACE_ALL,

    /// <remarks/>
    NO_UPDATE,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum MatchOperator
{

    /// <remarks/>
    NONE,

    /// <remarks/>
    AND,

    /// <remarks/>
    OR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum PermissionStatus
{

    /// <remarks/>
    OPTIN,

    /// <remarks/>
    OPTOUT,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class TriggerResult
{

    private System.Nullable<long> recipientIdField;

    private System.Nullable<bool> successField;

    private string errorMessageField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> recipientId
    {
        get
        {
            return this.recipientIdField;
        }
        set
        {
            this.recipientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<bool> success
    {
        get
        {
            return this.successField;
        }
        set
        {
            this.successField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string errorMessage
    {
        get
        {
            return this.errorMessageField;
        }
        set
        {
            this.errorMessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class Recipient
{

    private InteractObject listNameField;

    private System.Nullable<long> recipientIdField;

    private string customerIdField;

    private string emailAddressField;

    private string mobileNumberField;

    private System.Nullable<EmailFormat> emailFormatField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public InteractObject listName
    {
        get
        {
            return this.listNameField;
        }
        set
        {
            this.listNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<long> recipientId
    {
        get
        {
            return this.recipientIdField;
        }
        set
        {
            this.recipientIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string customerId
    {
        get
        {
            return this.customerIdField;
        }
        set
        {
            this.customerIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string emailAddress
    {
        get
        {
            return this.emailAddressField;
        }
        set
        {
            this.emailAddressField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string mobileNumber
    {
        get
        {
            return this.mobileNumberField;
        }
        set
        {
            this.mobileNumberField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public System.Nullable<EmailFormat> emailFormat
    {
        get
        {
            return this.emailFormatField;
        }
        set
        {
            this.emailFormatField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class InteractObject
{

    private string folderNameField;

    private string objectNameField;

    /// <remarks/>
    public string folderName
    {
        get
        {
            return this.folderNameField;
        }
        set
        {
            this.folderNameField = value;
        }
    }

    /// <remarks/>
    public string objectName
    {
        get
        {
            return this.objectNameField;
        }
        set
        {
            this.objectNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum EmailFormat
{

    /// <remarks/>
    TEXT_FORMAT,

    /// <remarks/>
    HTML_FORMAT,

    /// <remarks/>
    MULTIPART_FORMAT,

    /// <remarks/>
    NO_FORMAT,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class RecipientData
{

    private Recipient recipientField;

    private OptionalData[] optionalDataField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public Recipient recipient
    {
        get
        {
            return this.recipientField;
        }
        set
        {
            this.recipientField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("optionalData", IsNullable = true)]
    public OptionalData[] optionalData
    {
        get
        {
            return this.optionalDataField;
        }
        set
        {
            this.optionalDataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class FolderResult
{

    private string nameField;

    /// <remarks/>
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class ServerAuthResult
{

    private string authSessionIdField;

    private System.Nullable<sbyte>[] encryptedClientChallengeField;

    private System.Nullable<sbyte>[] serverChallengeField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string authSessionId
    {
        get
        {
            return this.authSessionIdField;
        }
        set
        {
            this.authSessionIdField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("encryptedClientChallenge", IsNullable = true)]
    public System.Nullable<sbyte>[] encryptedClientChallenge
    {
        get
        {
            return this.encryptedClientChallengeField;
        }
        set
        {
            this.encryptedClientChallengeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("serverChallenge", IsNullable = true)]
    public System.Nullable<sbyte>[] serverChallenge
    {
        get
        {
            return this.serverChallengeField;
        }
        set
        {
            this.serverChallengeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class LoginResult
{

    private string sessionIdField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string sessionId
    {
        get
        {
            return this.sessionIdField;
        }
        set
        {
            this.sessionIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:ws.rsys.com")]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:ws.rsys.com", IsNullable = false)]
public partial class SessionHeader : System.Web.Services.Protocols.SoapHeader
{

    private string sessionIdField;

    /// <remarks/>
    public string sessionId
    {
        get
        {
            return this.sessionIdField;
        }
        set
        {
            this.sessionIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public enum QueryColumn
{

    /// <remarks/>
    RIID,

    /// <remarks/>
    CUSTOMER_ID,

    /// <remarks/>
    EMAIL_ADDRESS,

    /// <remarks/>
    MOBILE_NUMBER,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public LoginResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((LoginResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void authenticateServerCompletedEventHandler(object sender, authenticateServerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class authenticateServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal authenticateServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public ServerAuthResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((ServerAuthResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void loginWithCertificateCompletedEventHandler(object sender, loginWithCertificateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginWithCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal loginWithCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public LoginResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((LoginResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createFolderCompletedEventHandler(object sender, createFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteFolderCompletedEventHandler(object sender, deleteFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void listFoldersCompletedEventHandler(object sender, listFoldersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal listFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public FolderResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((FolderResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void triggerCampaignMessageCompletedEventHandler(object sender, triggerCampaignMessageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class triggerCampaignMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal triggerCampaignMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void HaMergeTriggerEmailCompletedEventHandler(object sender, HaMergeTriggerEmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HaMergeTriggerEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal HaMergeTriggerEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeTriggerEmailCompletedEventHandler(object sender, mergeTriggerEmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeTriggerEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeTriggerEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeTriggerSMSCompletedEventHandler(object sender, mergeTriggerSMSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeTriggerSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeTriggerSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void triggerCustomEventCompletedEventHandler(object sender, triggerCustomEventCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class triggerCustomEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal triggerCustomEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void launchCampaignCompletedEventHandler(object sender, launchCampaignCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class launchCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal launchCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public LaunchResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((LaunchResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void scheduleCampaignLaunchCompletedEventHandler(object sender, scheduleCampaignLaunchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class scheduleCampaignLaunchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal scheduleCampaignLaunchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void getLaunchStatusCompletedEventHandler(object sender, getLaunchStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getLaunchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getLaunchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public LaunchStatusResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((LaunchStatusResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeListMembersCompletedEventHandler(object sender, mergeListMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeListMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeListMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public MergeResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((MergeResult)(this.results[0]));
        }
    }
}

/// <remarks/>

//1. Create a Record Class - Dilanka updated the below missing class
/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:ws.rsys.com")]
public partial class Record
{
    private string[] fieldValuesField;
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("fieldValues",
    IsNullable = true)]
    public string[] fieldValues
    {
        get
        {
            return this.fieldValuesField;
        }
        set
        {
            this.fieldValuesField = value;
        }
    }
}

/// -- Dilanka updated the above






[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void retrieveListMembersCompletedEventHandler(object sender, retrieveListMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class retrieveListMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal retrieveListMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetrieveResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetrieveResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteListMembersCompletedEventHandler(object sender, deleteListMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteListMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteListMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public DeleteResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((DeleteResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteProfileExtensionMembersCompletedEventHandler(object sender, deleteProfileExtensionMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteProfileExtensionMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteProfileExtensionMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public DeleteResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((DeleteResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createTableCompletedEventHandler(object sender, createTableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteTableCompletedEventHandler(object sender, deleteTableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeTableRecordsCompletedEventHandler(object sender, mergeTableRecordsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeTableRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeTableRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public MergeResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((MergeResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void retrieveTableRecordsCompletedEventHandler(object sender, retrieveTableRecordsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class retrieveTableRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal retrieveTableRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetrieveResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetrieveResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteTableRecordsCompletedEventHandler(object sender, deleteTableRecordsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteTableRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteTableRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public DeleteResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((DeleteResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void truncateTableCompletedEventHandler(object sender, truncateTableCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class truncateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal truncateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createDocumentCompletedEventHandler(object sender, createDocumentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteDocumentCompletedEventHandler(object sender, deleteDocumentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void setDocumentImagesCompletedEventHandler(object sender, setDocumentImagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setDocumentImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setDocumentImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void getDocumentImagesCompletedEventHandler(object sender, getDocumentImagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDocumentImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getDocumentImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public ImageData[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((ImageData[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void setDocumentContentCompletedEventHandler(object sender, setDocumentContentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void getDocumentContentCompletedEventHandler(object sender, getDocumentContentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public ContentResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((ContentResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeListMembersRIIDCompletedEventHandler(object sender, mergeListMembersRIIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeListMembersRIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeListMembersRIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RecipientResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RecipientResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeIntoProfileExtensionCompletedEventHandler(object sender, mergeIntoProfileExtensionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeIntoProfileExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeIntoProfileExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RecipientResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RecipientResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createTableWithPKCompletedEventHandler(object sender, createTableWithPKCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createTableWithPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createTableWithPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void mergeTableRecordsWithPKCompletedEventHandler(object sender, mergeTableRecordsWithPKCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class mergeTableRecordsWithPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal mergeTableRecordsWithPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public MergeResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((MergeResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void retrieveProfileExtensionRecordsCompletedEventHandler(object sender, retrieveProfileExtensionRecordsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class retrieveProfileExtensionRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal retrieveProfileExtensionRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public RetrieveResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((RetrieveResult)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void listContentLibraryFoldersCompletedEventHandler(object sender, listContentLibraryFoldersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listContentLibraryFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal listContentLibraryFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public ContentLibraryFolderResult[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((ContentLibraryFolderResult[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doesContentLibraryFolderExistCompletedEventHandler(object sender, doesContentLibraryFolderExistCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doesContentLibraryFolderExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal doesContentLibraryFolderExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteContentLibraryFolderCompletedEventHandler(object sender, deleteContentLibraryFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteContentLibraryFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteContentLibraryFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createContentLibraryFolderCompletedEventHandler(object sender, createContentLibraryFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createContentLibraryFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createContentLibraryFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void createContentLibraryItemCompletedEventHandler(object sender, createContentLibraryItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createContentLibraryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal createContentLibraryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void setContentLibraryItemCompletedEventHandler(object sender, setContentLibraryItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setContentLibraryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal setContentLibraryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void deleteContentLibraryItemCompletedEventHandler(object sender, deleteContentLibraryItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteContentLibraryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal deleteContentLibraryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Nullable<bool> Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<bool>)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void getContentLibraryItemCompletedEventHandler(object sender, getContentLibraryItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getContentLibraryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getContentLibraryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }

    /// <remarks/>
    public string type
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }

    /// <remarks/>
    public ItemData itemData
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((ItemData)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void HaMergeTriggerSmsCompletedEventHandler(object sender, HaMergeTriggerSmsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HaMergeTriggerSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal HaMergeTriggerSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public TriggerResult Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((TriggerResult)(this.results[0]));
        }
    }
}
